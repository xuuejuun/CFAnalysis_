# -*- coding: utf-8 -*-


import numpy as np 
from CrystalFieldAnalysis import CFAnalysis 



def main():
    #################################################
    # define the title of the system.
    # -----------------------------------------------
    title = 'Pa' 
    lthf = 'Yes'

    #################################################
    # define angular momentum here.
    #------------------------------------------------
    L = 3
    SS = 1/2
    J = 5/2

    #------------------------------------------------
    # Rank of operator Akq and Okq.
    #------------------------------------------------
    ks = [2,4,6]
    #------------------------------------------------
    # Define spin-orbit coupling parameter lamda here.
    #------------------------------------------------
    # lamda = 1500 # Pa compound
    lamdas = list(range(0,2500,2))
    #------------------------------------------------
    # Introduce a tiny zeeman H here.
    #------------------------------------------------
    Hzee = 0.0000001
    #################################################
    #------------------------------------------------
    # Apply magnetic field along the pesudospin L
    # direction.
    #------------------------------------------------
    # LS
    # axes = np.array([-0.13502125874409, 0.02597992956326, 0.99050204590755])
    # J 
    axes =  np.array([0.44005719542438, -0.01346648167490,  0.89786876470146])
    
    #################################################
    #------------------------------------------------
    # Crystal Field Parameter list.
    #------------------------------------------------
    Akqlist = [-1.78176783769959E-05 -9.90643625155228E-05*1j,
               +1.98879838485200E-05 -4.54495575631082E-05*1j,
               -6.94951778953984E+01 +1.30054600366602E-14*1j,
               -1.98879838295193E-05 -4.54495575945389E-05*1j,
               -1.78176783877603E-05 +9.90643624989469E-05*1j,
               +6.25804275415214E+02 +2.96534406489536E-04*1j,
               +2.41619792489967E-04 +1.35710849018665E-04*1j,
               +6.44298575511582E-05 +6.61420134121341E-05*1j,
               -1.00986319510041E-04 +4.00970773402442E-04*1j,
               +1.03419861850985E+03 +1.97244923485580E-15*1j,
               +1.00986319487878E-04 +4.00970773423935E-04*1j,
               +6.44298575430483E-05 -6.61420134051307E-05*1j,
               -2.41619792487895E-04 +1.35710849051750E-04*1j,
               +6.25804275415214E+02 -2.96534406459675E-04*1j,
               +6.27593566941715E-06 -1.28321201143214E-05*1j,
               -7.06660327977748E-06 +3.00331181909801E-05*1j,
               +2.94686252185622E+01 +3.68949254143611E-05*1j,
               +2.53032259190882E-05 +3.85772580098828E-05*1j,
               +1.37532486505152E-05 -9.19532742250054E-06*1j,
               +2.03863115779692E-06 -1.99541677634669E-05*1j,
               -1.32512834718442E+01 -3.86414406458761E-16*1j,
               -2.03863115505595E-06 -1.99541677691046E-05*1j,
               +1.37532486501847E-05 +9.19532742123977E-06*1j,
               -2.53032259196862E-05 +3.85772580127361E-05*1j,
               +2.94686252185622E+01 -3.68949254169816E-05*1j,
               +7.06660327977748E-06 +3.00331181916412E-05*1j,
               +6.27593566941715E-06 +1.28321201105814E-05*1j]
    # Akqlist = [0]*27 
    # Akqlist[2]= -1.27580977847726E+02-7.02324225149286E-15*1j
    #################################################
    #------------------------------------------------
    # Main function. Design your own calculations.
    #------------------------------------------------
    print("J = ", J)
    #################################################
    for lamda in lamdas:
        print("spin-orbit constant lambda = ", lamda)
        Pa = CFAnalysis(title,lthf,Akqlist,L,SS,J,Hzee,axes,lamda,ks)
    # zs_e,zs_v = CFAnalysis(title,Akqlist,L,SS,J,Hzee,axes,lamda,ks).flow_chart()
    
    # Pa = CFAnalysis(title,lthf,Akqlist,L,SS,J,Hzee,axes,lamda,ks) 
    

if __name__ == "__main__":
    main()


